{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(source, true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport React from 'react';\nimport getClassName from '../../helpers/getClassName';\nimport classNames from '../../lib/classNames';\nimport usePlatform from '../../hooks/usePlatform';\n\nvar FormField = function FormField(_ref) {\n  var TagName = _ref.TagName,\n      className = _ref.className,\n      children = _ref.children,\n      status = _ref.status,\n      getRootRef = _ref.getRootRef,\n      restProps = _objectWithoutProperties(_ref, [\"TagName\", \"className\", \"children\", \"status\", \"getRootRef\"]);\n\n  var platform = usePlatform(); // Не используем тут JSX из-за этой проблемы: https://github.com/Microsoft/TypeScript/issues/28892\n\n  return React.createElement(TagName, _objectSpread({}, restProps, {\n    ref: getRootRef,\n    className: classNames(getClassName('FormField', platform), _defineProperty({}, \"FormField--s-\".concat(status), status !== 'default'), className)\n  }), React.createElement(React.Fragment, null, children, React.createElement(\"div\", {\n    className: \"FormField__border\"\n  })));\n};\n\nFormField.defaultProps = {\n  status: 'default',\n  TagName: 'div'\n};\nexport default FormField;","map":null,"metadata":{},"sourceType":"module"}