{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport React, { PureComponent } from 'react';\nimport classNames from '../../lib/classNames';\nimport FormField from '../FormField/FormField';\n\nvar Textarea =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(Textarea, _PureComponent);\n\n  function Textarea(props) {\n    var _this;\n\n    _classCallCheck(this, Textarea);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Textarea).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"isControlledOutside\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"element\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"getRef\", function (element) {\n      _this.element = element;\n      var getRef = _this.props.getRef;\n\n      if (getRef) {\n        if (typeof getRef === 'function') {\n          getRef(element);\n        } else {\n          getRef.current = element;\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"resize\", function () {\n      var el = _this.element;\n\n      if (el) {\n        var offsetHeight = el.offsetHeight,\n            scrollHeight = el.scrollHeight;\n        var style = window.getComputedStyle(el);\n        var paddingTop = parseInt(style.paddingTop);\n        var paddingBottom = parseInt(style.paddingBottom);\n        var diff = paddingTop + paddingBottom;\n\n        if (scrollHeight + diff <= offsetHeight) {\n          diff = 0;\n        }\n\n        if (el.value) {\n          _this.setState({\n            height: scrollHeight - diff\n          });\n        }\n\n        _this.setState({\n          height: 0\n        }, function () {\n          var height = el.scrollHeight - diff;\n\n          _this.setState({\n            height: height\n          });\n\n          _this.props.onResize(el);\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onChange\", function (e) {\n      if (_this.props.grow) {\n        _this.resize();\n      }\n\n      if (!_this.isControlledOutside) {\n        _this.setState({\n          value: e.target.value\n        });\n      }\n\n      if (_this.props.onChange) {\n        _this.props.onChange(e);\n      }\n    });\n\n    if (typeof props.value !== 'undefined') {\n      _this.isControlledOutside = true;\n      _this.state = {};\n    } else {\n      _this.state = {\n        value: props.defaultValue || ''\n      };\n    }\n\n    return _this;\n  }\n\n  _createClass(Textarea, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.grow) {\n        this.resize();\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this2 = this;\n\n      if (prevProps.value && this.props.value === '') {\n        // Fix iOS extra indent on removing content\n        window.requestAnimationFrame(function () {\n          _this2.element.value = '';\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          defaultValue = _this$props.defaultValue,\n          value = _this$props.value,\n          onChange = _this$props.onChange,\n          grow = _this$props.grow,\n          style = _this$props.style,\n          onResize = _this$props.onResize,\n          className = _this$props.className,\n          getRootRef = _this$props.getRootRef,\n          getRef = _this$props.getRef,\n          status = _this$props.status,\n          restProps = _objectWithoutProperties(_this$props, [\"defaultValue\", \"value\", \"onChange\", \"grow\", \"style\", \"onResize\", \"className\", \"getRootRef\", \"getRef\", \"status\"]);\n\n      var height = this.state.height || style.height || 66;\n      return React.createElement(FormField, {\n        className: classNames('Textarea', className),\n        style: style,\n        getRootRef: getRootRef,\n        status: status\n      }, React.createElement(\"textarea\", _extends({}, restProps, {\n        className: \"Textarea__el\",\n        value: this.value,\n        onChange: this.onChange,\n        ref: this.getRef,\n        style: {\n          height: height\n        }\n      })));\n    }\n  }, {\n    key: \"value\",\n    get: function get() {\n      return this.isControlledOutside ? this.props.value : this.state.value;\n    }\n  }]);\n\n  return Textarea;\n}(PureComponent);\n\n_defineProperty(Textarea, \"defaultProps\", {\n  style: {},\n  defaultValue: '',\n  grow: true,\n  onResize: function onResize() {}\n});\n\nexport { Textarea as default };","map":null,"metadata":{},"sourceType":"module"}