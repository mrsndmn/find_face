{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _classNames = _interopRequireDefault(require(\"../../lib/classNames\"));\n\nvar _getClassName = _interopRequireDefault(require(\"../../helpers/getClassName\"));\n\nvar _Tappable = _interopRequireDefault(require(\"../Tappable/Tappable\"));\n\nvar _Touch = _interopRequireDefault(require(\"../Touch/Touch\"));\n\nvar _platform = require(\"../../lib/platform\");\n\nvar _chevron = _interopRequireDefault(require(\"@vkontakte/icons/dist/24/chevron\"));\n\nvar _done = _interopRequireDefault(require(\"@vkontakte/icons/dist/16/done\"));\n\nvar _cancel = _interopRequireDefault(require(\"@vkontakte/icons/dist/24/cancel\"));\n\nvar _reorder = _interopRequireDefault(require(\"@vkontakte/icons/dist/24/reorder\"));\n\nvar _reorder_ios = _interopRequireDefault(require(\"@vkontakte/icons/dist/24/reorder_ios\"));\n\nvar _withPlatform = _interopRequireDefault(require(\"../../hoc/withPlatform\"));\n\nvar Cell =\n/*#__PURE__*/\nfunction (_Component) {\n  (0, _inherits2.default)(Cell, _Component);\n\n  function Cell(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, Cell);\n    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Cell).call(this, props));\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"rootEl\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"removeButton\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"onClick\", function (e) {\n      var _this$props = _this.props,\n          removable = _this$props.removable,\n          onClick = _this$props.onClick;\n\n      if (e.target.tagName.toLowerCase() === 'input') {\n        e.stopPropagation();\n      } else if (removable) {\n        return null;\n      } else {\n        onClick && onClick(e);\n      }\n    });\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"activateRemove\", function () {\n      _this.setState({\n        isRemoveActivated: true\n      });\n\n      _this.document.addEventListener('click', _this.deactivateRemove);\n    });\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"deactivateRemove\", function () {\n      _this.setState({\n        isRemoveActivated: false,\n        removeOffset: 0\n      });\n\n      _this.document.removeEventListener('click', _this.deactivateRemove);\n    });\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"onRemoveClick\", function (e) {\n      e.nativeEvent.stopImmediatePropagation();\n      e.preventDefault();\n      _this.props.onRemove && _this.props.onRemove(e, _this.rootEl);\n    });\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"getRemoveRef\", function (el) {\n      return _this.removeButton = el;\n    });\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"getRootRef\", function (element) {\n      _this.rootEl = element;\n      var getRootRef = _this.props.getRootRef;\n\n      if (getRootRef) {\n        if (typeof getRootRef === 'function') {\n          getRootRef(element);\n        } else {\n          getRootRef.current = element;\n        }\n      }\n    });\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"dragShift\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"listEl\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"siblings\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"dragStartIndex\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"dragEndIndex\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"dragDirection\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"onDragStart\", function () {\n      _this.setState({\n        dragging: true\n      });\n\n      _this.dragShift = 0;\n      _this.listEl = _this.rootEl.closest('.List');\n      _this.listEl && _this.listEl.classList.add('List--dragging');\n      _this.siblings = Array.prototype.slice.call(_this.rootEl.parentElement.childNodes);\n      _this.dragStartIndex = _this.siblings.indexOf(_this.rootEl);\n    });\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"onDragMove\", function (e) {\n      e.originalEvent.preventDefault();\n      if (_this.state.removeOffset) return;\n      _this.rootEl.style.transform = \"translateY(\".concat(e.shiftY, \"px)\");\n\n      var rootGesture = _this.rootEl.getBoundingClientRect();\n\n      _this.dragDirection = _this.dragShift - e.shiftY < 0 ? 'down' : 'up';\n      _this.dragShift = e.shiftY;\n      _this.dragEndIndex = _this.dragStartIndex;\n\n      _this.siblings.forEach(function (sibling, siblingIndex) {\n        var siblingGesture = sibling.getBoundingClientRect();\n\n        if (_this.dragStartIndex < siblingIndex) {\n          if (rootGesture.bottom > siblingGesture.top + siblingGesture.height / 2) {\n            if (_this.dragDirection === 'down') sibling.style.transform = \"translateY(-100%)\";\n            _this.dragEndIndex++;\n          }\n\n          if (rootGesture.top < siblingGesture.bottom - siblingGesture.height / 2 && _this.dragDirection === 'up') {\n            sibling.style.transform = \"translateY(0)\";\n          }\n        } else if (_this.dragStartIndex > siblingIndex) {\n          if (rootGesture.top < siblingGesture.bottom - siblingGesture.height / 2) {\n            if (_this.dragDirection === 'up') sibling.style.transform = \"translateY(100%)\";\n            _this.dragEndIndex--;\n          }\n\n          if (rootGesture.bottom > siblingGesture.top + siblingGesture.height / 2 && _this.dragDirection === 'down') {\n            sibling.style.transform = \"translateY(0)\";\n          }\n        }\n      });\n    });\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"onDragEnd\", function () {\n      _this.setState({\n        dragging: false\n      });\n\n      _this.listEl && _this.listEl.classList.remove('List--dragging');\n      _this.props.onDragFinish && _this.props.onDragFinish({\n        from: _this.dragStartIndex,\n        to: _this.dragEndIndex\n      });\n\n      _this.siblings.forEach(function (sibling) {\n        return sibling.style.transform = null;\n      });\n\n      delete _this.dragShift;\n      delete _this.listEl;\n      delete _this.siblings;\n      delete _this.dragStartIndex;\n      delete _this.dragEndIndex;\n      delete _this.dragDirection;\n    });\n    _this.state = {\n      isRemoveActivated: false,\n      removeOffset: 0,\n      dragging: false\n    };\n    return _this;\n  }\n\n  (0, _createClass2.default)(Cell, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.document.removeEventListener('click', this.deactivateRemove);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(_prevProps, prevState) {\n      if (prevState.isRemoveActivated !== this.state.isRemoveActivated && this.state.isRemoveActivated) {\n        this.setState({\n          removeOffset: this.removeButton.offsetWidth\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          before = _this$props2.before,\n          indicator = _this$props2.indicator,\n          asideContent = _this$props2.asideContent,\n          expandable = _this$props2.expandable,\n          onClick = _this$props2.onClick,\n          children = _this$props2.children,\n          getRootRef = _this$props2.getRootRef,\n          description = _this$props2.description,\n          selectable = _this$props2.selectable,\n          multiline = _this$props2.multiline,\n          className = _this$props2.className,\n          onRemove = _this$props2.onRemove,\n          removable = _this$props2.removable,\n          removePlaceholder = _this$props2.removePlaceholder,\n          draggable = _this$props2.draggable,\n          onDragFinish = _this$props2.onDragFinish,\n          href = _this$props2.href,\n          size = _this$props2.size,\n          bottomContent = _this$props2.bottomContent,\n          platform = _this$props2.platform,\n          restProps = (0, _objectWithoutProperties2.default)(_this$props2, [\"before\", \"indicator\", \"asideContent\", \"expandable\", \"onClick\", \"children\", \"getRootRef\", \"description\", \"selectable\", \"multiline\", \"className\", \"onRemove\", \"removable\", \"removePlaceholder\", \"draggable\", \"onDragFinish\", \"href\", \"size\", \"bottomContent\", \"platform\"]);\n      selectable = selectable && !draggable;\n      var rootProps = selectable ? {} : restProps;\n      var inputProps = selectable ? restProps : {};\n      var linkProps = href ? restProps : {};\n      var IS_PLATFORM_ANDROID = platform === _platform.ANDROID;\n      var IS_PLATFORM_IOS = platform === _platform.IOS;\n      return _react.default.createElement(\"div\", (0, _extends2.default)({}, rootProps, {\n        onClick: href || draggable ? null : this.onClick,\n        className: (0, _classNames.default)((0, _getClassName.default)('Cell', platform), {\n          'Cell--expandable': expandable,\n          'Cell--multiline': multiline,\n          'Cell--dragging': this.state.dragging,\n          'Cell--draggable': draggable\n        }, \"Cell--\".concat(size), className),\n        ref: this.getRootRef\n      }), _react.default.createElement(_Tappable.default, (0, _extends2.default)({}, linkProps, {\n        onClick: href ? this.onClick : null,\n        component: selectable ? 'label' : href ? 'a' : 'div',\n        className: \"Cell__in\",\n        href: href,\n        disabled: !selectable && !onClick && !href || removable || draggable,\n        style: removable ? {\n          transform: \"translateX(-\".concat(this.state.removeOffset, \"px)\")\n        } : null\n      }), selectable && _react.default.createElement(\"input\", (0, _extends2.default)({}, inputProps, {\n        type: \"checkbox\",\n        className: \"Cell__checkbox\"\n      })), _react.default.createElement(\"div\", {\n        className: \"Cell__before\"\n      }, selectable && IS_PLATFORM_IOS && _react.default.createElement(\"div\", {\n        className: \"Cell__checkbox-marker\"\n      }, _react.default.createElement(_done.default, null)), removable && IS_PLATFORM_IOS && _react.default.createElement(\"div\", {\n        className: \"Cell__remove-marker\",\n        onClick: this.activateRemove\n      }), IS_PLATFORM_ANDROID && draggable && _react.default.createElement(_Touch.default, {\n        onStart: this.onDragStart,\n        onMoveY: this.onDragMove,\n        onEnd: this.onDragEnd,\n        className: \"Cell__dragger\"\n      }, _react.default.createElement(_reorder.default, null)), before && _react.default.createElement(\"div\", {\n        className: \"Cell__before-in\"\n      }, before)), _react.default.createElement(\"div\", {\n        className: \"Cell__main\"\n      }, _react.default.createElement(\"div\", {\n        className: \"Cell__children\"\n      }, children), description && _react.default.createElement(\"div\", {\n        className: \"Cell__description\"\n      }, description), size === 'l' && bottomContent && _react.default.createElement(\"div\", {\n        className: \"Cell__bottom\"\n      }, bottomContent)), _react.default.createElement(\"div\", {\n        className: \"Cell__indicator\"\n      }, indicator), _react.default.createElement(\"div\", {\n        className: \"Cell__aside\"\n      }, asideContent, selectable && IS_PLATFORM_ANDROID && _react.default.createElement(\"div\", {\n        className: \"Cell__checkbox-marker\"\n      }, _react.default.createElement(_done.default, null)), removable && IS_PLATFORM_ANDROID && _react.default.createElement(\"div\", {\n        className: \"Cell__remove-marker\",\n        onClick: this.onRemoveClick\n      }, _react.default.createElement(_cancel.default, null)), IS_PLATFORM_IOS && expandable && !draggable && _react.default.createElement(_chevron.default, {\n        className: \"Cell__chevron\"\n      }), IS_PLATFORM_IOS && draggable && _react.default.createElement(_Touch.default, {\n        className: \"Cell__dragger\",\n        onStart: this.onDragStart,\n        onMoveY: this.onDragMove,\n        onEnd: this.onDragEnd\n      }, _react.default.createElement(_reorder_ios.default, null)))), removable && IS_PLATFORM_IOS && _react.default.createElement(\"div\", {\n        ref: this.getRemoveRef,\n        className: \"Cell__remove\",\n        onClick: this.onRemoveClick,\n        style: removable ? {\n          transform: \"translateX(-\".concat(this.state.removeOffset, \"px)\")\n        } : null\n      }, _react.default.createElement(\"span\", {\n        className: \"Cell__remove-in\"\n      }, removePlaceholder)));\n    }\n  }, {\n    key: \"document\",\n    get: function get() {\n      return this.context.document || document;\n    }\n    /**\n     * предотвращает двойное срабатывание в случае с input\n     * (https://github.com/vuejs/vue/issues/3699#issuecomment-247957931)\n     * предотвращает клик в случае, когда включен режим removable\n     * @param e\n     */\n\n  }]);\n  return Cell;\n}(_react.Component);\n\n(0, _defineProperty2.default)(Cell, \"defaultProps\", {\n  before: null,\n  indicator: '',\n  asideContent: '',\n  bottomContent: null,\n  expandable: false,\n  children: '',\n  selectable: false,\n  multiline: false,\n  removable: false,\n  size: 'm',\n  removePlaceholder: 'Удалить'\n});\n(0, _defineProperty2.default)(Cell, \"contextTypes\", {\n  document: _propTypes.default.any\n});\n\nvar _default = (0, _withPlatform.default)(Cell);\n\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}