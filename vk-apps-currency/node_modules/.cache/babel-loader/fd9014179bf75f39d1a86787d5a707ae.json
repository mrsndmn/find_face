{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport getClassName from '../../helpers/getClassName';\nimport classNames from '../../lib/classNames';\nimport HeaderButton from '../HeaderButton/HeaderButton';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\nimport Icon24Cancel from '@vkontakte/icons/dist/24/cancel';\nimport Icon24Search from '@vkontakte/icons/dist/24/search';\nvar baseClassName = getClassName('Search');\n\nvar SearchAndroid =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SearchAndroid, _React$Component);\n\n  function SearchAndroid(props) {\n    var _this;\n\n    _classCallCheck(this, SearchAndroid);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SearchAndroid).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"onCancel\", function () {\n      if (!_this.isControlledOutside) {\n        _this.setState({\n          value: ''\n        });\n      }\n\n      if (_this.props.onChange) {\n        _this.props.onChange('');\n      }\n\n      _this.inputEl.focus();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onChange\", function (e) {\n      if (!_this.isControlledOutside) {\n        _this.setState({\n          value: e.target.value\n        });\n      }\n\n      if (_this.props.onChange) {\n        _this.props.onChange(e.target.value, e);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"inputRef\", function (element) {\n      _this.inputEl = element;\n      var getRef = _this.props.getRef;\n\n      if (getRef) {\n        if (typeof getRef === 'function') {\n          getRef(element);\n        } else {\n          getRef.current = element;\n        }\n      }\n    });\n\n    var state = {};\n\n    if (props.hasOwnProperty('value')) {\n      _this.isControlledOutside = true;\n    } else {\n      state.value = props.defaultValue || '';\n    }\n\n    _this.state = state;\n    return _this;\n  }\n\n  _createClass(SearchAndroid, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.theme === 'header' && this.props.autoFocus && this.inputEl.focus();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          getRef = _this$props.getRef,\n          value = _this$props.value,\n          defaultValue = _this$props.defaultValue,\n          onChange = _this$props.onChange,\n          onClose = _this$props.onClose,\n          theme = _this$props.theme,\n          autoFocus = _this$props.autoFocus,\n          inputProps = _objectWithoutProperties(_this$props, [\"getRef\", \"value\", \"defaultValue\", \"onChange\", \"onClose\", \"theme\", \"autoFocus\"]);\n\n      var hasValue = !!this.value;\n      var className = classNames(baseClassName, \"Search--\".concat(theme), {\n        'Search--has-value': hasValue,\n        'Search--vkapps': this.context.webviewType === 'vkapps'\n      }, this.props.className);\n      return React.createElement(\"div\", {\n        className: className\n      }, React.createElement(\"div\", {\n        className: \"Search__container\"\n      }, React.createElement(\"div\", {\n        className: \"Search__before\"\n      }, theme === 'default' && React.createElement(Icon24Search, null), theme === 'header' && React.createElement(HeaderButton, {\n        onClick: onClose\n      }, React.createElement(Icon24Back, null))), React.createElement(\"div\", {\n        className: \"Search__control\"\n      }, React.createElement(\"input\", _extends({}, inputProps, {\n        className: \"Search__input\",\n        ref: this.inputRef,\n        value: this.value,\n        onChange: this.onChange\n      }))), hasValue && React.createElement(\"div\", {\n        className: \"Search__after\"\n      }, theme === 'default' && React.createElement(Icon24Cancel, {\n        onClick: this.onCancel\n      }), theme === 'header' && React.createElement(HeaderButton, {\n        onClick: this.onCancel\n      }, React.createElement(Icon24Cancel, null)))));\n    }\n  }, {\n    key: \"value\",\n    get: function get() {\n      return this.isControlledOutside ? this.props.value : this.state.value;\n    }\n  }]);\n\n  return SearchAndroid;\n}(React.Component);\n\n_defineProperty(SearchAndroid, \"propTypes\", {\n  className: PropTypes.string,\n  defaultValue: PropTypes.string,\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n  onFocus: PropTypes.func,\n  onBlur: PropTypes.func,\n  onClose: PropTypes.func,\n  placeholder: PropTypes.node,\n  theme: PropTypes.oneOf(['header', 'default']),\n  getRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.any\n  })]),\n  autoFocus: PropTypes.bool\n});\n\n_defineProperty(SearchAndroid, \"defaultProps\", {\n  placeholder: 'Поиск',\n  theme: 'default',\n  autoFocus: true\n});\n\n_defineProperty(SearchAndroid, \"contextTypes\", {\n  webviewType: PropTypes.oneOf(['vkapps', 'internal'])\n});\n\nexport { SearchAndroid as default };","map":null,"metadata":{},"sourceType":"module"}