{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(source, true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport React, { Children, Fragment } from 'react';\nimport getClassName from '../../helpers/getClassName';\nimport classNames from '../../lib/classNames';\nimport usePlatform from '../../hooks/usePlatform';\n\nvar preventDefault = function preventDefault(e) {\n  return e.preventDefault();\n};\n\nvar FormLayout = function FormLayout(props) {\n  var children = props.children,\n      TagName = props.TagName,\n      className = props.className,\n      getRef = props.getRef,\n      onSubmit = props.onSubmit,\n      restProps = _objectWithoutProperties(props, [\"children\", \"TagName\", \"className\", \"getRef\", \"onSubmit\"]);\n\n  var platform = usePlatform(); // Не используем тут JSX из-за этой проблемы: https://github.com/Microsoft/TypeScript/issues/28892\n\n  return React.createElement(TagName, _objectSpread({}, restProps, {\n    className: classNames(getClassName('FormLayout', platform), className),\n    onSubmit: onSubmit,\n    ref: getRef\n  }), React.createElement(Fragment, null, React.createElement(\"div\", {\n    className: \"FormLayout__container\"\n  }, Children.toArray(children).map(function (field, i) {\n    if (field) {\n      var _field$props = field.props,\n          status = _field$props.status,\n          top = _field$props.top,\n          bottom = _field$props.bottom;\n      return React.createElement(\"div\", {\n        className: classNames('FormLayout__row', _defineProperty({}, \"FormLayout__row--s-\".concat(status), !!status)),\n        key: field.key || \"row-\".concat(i)\n      }, top && React.createElement(\"div\", {\n        className: \"FormLayout__row-top\"\n      }, top), field, bottom && React.createElement(\"div\", {\n        className: \"FormLayout__row-bottom\"\n      }, bottom));\n    } else {\n      return null;\n    }\n  })), TagName === 'form' && React.createElement(\"input\", {\n    type: \"submit\",\n    className: \"FormLayout__submit\",\n    value: \"\"\n  })));\n};\n\nFormLayout.defaultProps = {\n  TagName: 'form',\n  onSubmit: preventDefault\n};\nexport default FormLayout;","map":null,"metadata":{},"sourceType":"module"}