{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport React from 'react';\nimport getClassName from '../../helpers/getClassName';\nimport classNames from '../../lib/classNames';\nimport PropTypes from 'prop-types';\nimport { IS_PLATFORM_ANDROID } from '../../lib/platform';\nimport transitionEvents from '../../lib/transitionEvents';\nvar baseClassNames = getClassName('PopoutWrapper');\n\nvar PopoutWrapper =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PopoutWrapper, _React$Component);\n\n  function PopoutWrapper() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, PopoutWrapper);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PopoutWrapper)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      opened: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onFadeInEnd\", function () {\n      var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n        manual: true\n      };\n\n      if (e.animationName === 'animation-full-fade-in' || e.manual) {\n        _this.setState({\n          opened: true\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"preventTouch\", function (e) {\n      return e.preventDefault();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onClick\", function (e) {\n      return _this.state.opened && _this.props.onClick && _this.props.onClick(e);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getRef\", function (el) {\n      return _this.el = el;\n    });\n\n    return _this;\n  }\n\n  _createClass(PopoutWrapper, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      window.addEventListener('touchmove', this.preventTouch, {\n        passive: false\n      });\n      this.waitAnimationFinish(this.el, this.onFadeInEnd);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.removeEventListener('touchmove', this.preventTouch, {\n        passive: false\n      });\n      clearTimeout(this.animationFinishTimeout);\n    }\n  }, {\n    key: \"waitAnimationFinish\",\n    value: function waitAnimationFinish(elem, eventHandler) {\n      if (transitionEvents.supported) {\n        var eventName = transitionEvents.prefix ? transitionEvents.prefix + 'AnimationEnd' : 'animationend';\n        elem.removeEventListener(eventName, eventHandler);\n        elem.addEventListener(eventName, eventHandler);\n      } else {\n        this.animationFinishTimeout = setTimeout(eventHandler.bind(this), IS_PLATFORM_ANDROID ? 300 : 600);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _classNames;\n\n      var _this$props = this.props,\n          v = _this$props.v,\n          h = _this$props.h,\n          closing = _this$props.closing,\n          children = _this$props.children,\n          hasMask = _this$props.hasMask,\n          onClick = _this$props.onClick,\n          className = _this$props.className,\n          restProps = _objectWithoutProperties(_this$props, [\"v\", \"h\", \"closing\", \"children\", \"hasMask\", \"onClick\", \"className\"]);\n\n      return React.createElement(\"div\", _extends({}, restProps, {\n        className: classNames(baseClassNames, (_classNames = {}, _defineProperty(_classNames, \"PopoutWrapper--v-\".concat(v), v), _defineProperty(_classNames, \"PopoutWrapper--h-\".concat(h), h), _defineProperty(_classNames, 'PopoutWrapper--closing', closing), _classNames), className),\n        onClick: this.onClick,\n        ref: this.getRef\n      }), hasMask && React.createElement(\"div\", {\n        className: \"PopoutWrapper__mask\"\n      }), React.createElement(\"div\", {\n        className: \"PopoutWrapper__container\"\n      }, children));\n    }\n  }]);\n\n  return PopoutWrapper;\n}(React.Component);\n\n_defineProperty(PopoutWrapper, \"propTypes\", {\n  hasMask: PropTypes.bool,\n  v: PropTypes.oneOf(['top', 'center', 'bottom']),\n  h: PropTypes.oneOf(['left', 'center', 'right']),\n  closing: PropTypes.bool,\n  onClick: PropTypes.func,\n  style: PropTypes.object,\n  children: PropTypes.node,\n  className: PropTypes.string\n});\n\n_defineProperty(PopoutWrapper, \"defaultProps\", {\n  hasMask: true,\n  v: 'center',\n  h: 'center',\n  closing: false\n});\n\nexport { PopoutWrapper as default };","map":null,"metadata":{},"sourceType":"module"}